<?php
namespace NooNoo;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-06-02 at 11:32:12.
 */
class RegexTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Regex
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Regex;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NooNoo\Regex::add()
     * @todo   Implement testAdd().
     */
    public function testAdd()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::multiple
     * @todo   Implement testMultiple().
     */
    public function testMultiple()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::between
     * @todo   Implement testBetween().
     */
    public function testBetween()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::oneOrMore
     * @todo   Implement testOneOrMore().
     */
    public function testOneOrMore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::zeroOrMore
     * @todo   Implement testZeroOrMore().
     */
    public function testZeroOrMore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::optional
     * @todo   Implement testOptional().
     */
    public function testOptional()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::start
     */
    public function testStart()
    {
        $this->assertEquals('^', $this->object->start());
    }

    /**
     * @covers NooNoo\Regex::end
     */
    public function testEnd()
    {
        $this->assertEquals('$', $this->object->end());
    }

    /**
     * @covers NooNoo\Regex::lowercase
     */
    public function testLowercase()
    {
        $this->assertEquals('([a-z])', $this->object->lowercase());
    }

    /**
     * @covers NooNoo\Regex::uppercase
     */
    public function testUppercase()
    {
        $this->assertEquals('([A-Z])', $this->object->uppercase());
    }

    /**
     * @covers NooNoo\Regex::alpha
     */
    public function testAlpha()
    {
        $this->assertEquals('([a-zA-Z])', $this->object->alpha());
    }

    /**
     * @covers NooNoo\Regex::slugchar
     */
    public function testSlugchar()
    {
        $this->assertEquals('([a-zA-Z0-9-_\/])', $this->object->slugchar());
    }

    /**
     * @covers NooNoo\Regex::number
     */
    public function testNumber()
    {
        $this->assertEquals('([0-9]+)', $this->object->number());
    }

    /**
     * @covers NooNoo\Regex::digit
     */
    public function testDigit()
    {
        $this->assertEquals('([0-9])', $this->object->digit());
    }

    /**
     * @covers NooNoo\Regex::alphanumeric
     */
    public function testAlphanumeric()
    {
        $actual = $this->object->alphanumeric();
        $this->assertEquals('([a-zA-Z0-9])', $actual);

        // So we can use the @depends annotation
        return $actual;
    }

    /**
     * @covers  NooNoo\Regex::then
     * @depends testAlphanumeric
     */
    public function testThen($object)
    {
        $actual = $object->then('teststring');
        $this->assertEquals('([a-zA-Z0-9])(teststring)', $actual);
    }

    /**
     * @covers  NooNoo\Regex::raw
     * @depends testAlphanumeric
     */
    public function testRaw($object)
    {
        $actual = $object->raw('(.*)');
        $this->assertEquals('([a-zA-Z0-9])(teststring)((.*))', $actual);
    }

    /**
     * @covers  NooNoo\Regex::maybe
     * @depends testAlphanumeric
     */
    public function testMaybe($object)
    {
        $actual = $object->maybe('perhaps');
        $this->assertEquals('([a-zA-Z0-9])(teststring)((.*))(perhaps)?', $actual);
    }

    /**
     * @covers  NooNoo\Regex::either
     * @depends testAlphanumeric
     */
    public function testEither($object)
    {
        $actual = $object->either('couldbe', 'mightbe');
        $this->assertEquals(
            '([a-zA-Z0-9])(teststring)((.*))(perhaps)?(couldbe|mightbe)',
            $actual
        );
    }

    /**
     * @covers NooNoo\Regex::oneOf
     * @todo   Implement testOneOf().
     */
    public function testOneOf()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::__toString
     * @todo   Implement test__toString().
     */
    public function testToString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::get
     * @todo   Implement testGet().
     */
    public function testGet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::isMatch
     * @todo   Implement testIsMatch().
     */
    public function testIsMatch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * Farmer Methods :P
     */

    /**
     * @covers NooNoo\Regex::eyUp
     * @todo   Implement testEyUp().
     */
    public function testEyUp()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::thatllDo
     * @todo   Implement testThatllDo().
     */
    public function testThatllDo()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::couldAppen
     * @todo   Implement testCouldAppen().
     */
    public function testCouldAppen()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::oneOrTother
     * @todo   Implement testOneOrTother().
     */
    public function testOneOrTother()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers NooNoo\Regex::goOnThen
     * @todo   Implement testGoOnThen().
     */
    public function testGoOnThen()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
